kind: pipeline
type: docker
name: backend

steps:
  - name: server:install
    image: node:16
    commands:
      - cd nestjs
      - npm ci

  - name: server:lint
    image: node:16
    commands:
      - cd nestjs
      - npm run lint

  - name: server:unit
    image: node:16
    commands:
      - cd nestjs
      - npm run test

  - name: server:build
    image: node:16
    commands:
      - cd nestjs
      - npm run buildall

  - name: server:build-docker
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: phoenix741/woodstock-backup
      auto_tag: true

---
kind: pipeline
type: docker
name: frontend

steps:
  - name: front:install
    image: node:16
    commands:
      - cd front
      - npm ci

  - name: front:lint
    image: node:16
    commands:
      - cd front
      - npm run lint
      #- npm run test:unit

  - name: front:build
    image: node:16
    commands:
      - cd front
      - npm run build

---
kind: pipeline
type: docker
name: website

steps:
  - name: website:build
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: phoenix741/woodstock-backup-website
      dockerfile: ./docs/website/Dockerfile
      context: ./docs/website
      auto_tag: true

---
kind: pipeline
type: docker
name: final

steps:
  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: webhook
      channel: ci
    when:
      status: [success, failure]

depends_on:
  - backend
  - frontend
  - website
