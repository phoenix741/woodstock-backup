version: "2"

services:
  website:
    build:
      context: ./docs/website
      dockerfile: Dockerfile
    image: phoenix741/woodstock-backup-website:develop
    ports:
      - 8080:80
  woodstock:
    build:
      context: ./
      dockerfile: Dockerfile
    image: phoenix741/woodstock-backup:develop
    ports:
      - 3000:3000
    links:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - APOLLO_KEY=service:woodstock-backup:iqaZyc66gS4JhesQlqnXvw
      - APOLLO_GRAPH_REF=woodstock@develop
      - NODE_ENV=development
    volumes:
      - "backups_storage:/backups"
  woodstock_backup:
    image: phoenix741/woodstock-backup:develop
    command: /nestjs/apps/backupWorker/main.js
    links:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - MAX_BACKUP_TASK=2
      - NODE_ENV=development
    volumes:
      - "backups_storage:/backups"
  woodstock_refcnt:
    image: phoenix741/woodstock-backup:develop
    command: /nestjs/apps/refcntWorker/main.js
    links:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - MAX_BACKUP_TASK=2
      - NODE_ENV=development
    volumes:
      - "backups_storage:/backups"
  woodstock_schedule:
    image: phoenix741/woodstock-backup:develop
    command: /nestjs/apps/scheduleWorker/main.js
    links:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - MAX_BACKUP_TASK=2
      - NODE_ENV=development
    volumes:
      - "backups_storage:/backups"
  woodstock_stats:
    image: phoenix741/woodstock-backup:develop
    command: /nestjs/apps/statsWorker/main.js
    links:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=debug
      - MAX_BACKUP_TASK=2
      - NODE_ENV=development
    volumes:
      - "backups_storage:/backups"
  woodstock_client:
    image: phoenix741/woodstock-backup:develop
    command: /nestjs/apps/client/main.js
    environment:
      - LOG_LEVEL=debug
      - NODE_ENV=development

  redis:
    image: "bitnami/redis:5.0"
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/bitnami/redis/data"
  prometheus:
    image: bitnami/prometheus:2

    volumes:
      - prometheus_storage:/opt/bitnami/prometheus/data
      - ./docker/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
    network_mode: "host"
volumes:
  redis_data:
    driver: local
  prometheus_storage:
    driver: local
  backups_storage:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/woodstock
      o: bind
